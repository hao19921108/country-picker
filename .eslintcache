[{"/Users/howardzhang/Documents/freecodecamp/covid/src/index.js":"1","/Users/howardzhang/Documents/freecodecamp/covid/src/App.js":"2","/Users/howardzhang/Documents/freecodecamp/covid/src/components/index.js":"3","/Users/howardzhang/Documents/freecodecamp/covid/src/components/Cards/Cards.jsx":"4","/Users/howardzhang/Documents/freecodecamp/covid/src/components/Charts/Charts.jsx":"5","/Users/howardzhang/Documents/freecodecamp/covid/src/api/index.js":"6","/Users/howardzhang/Documents/freecodecamp/covid/src/components/CountryPicker/CountryPicker.jsx":"7"},{"size":361,"mtime":1607345877291,"results":"8","hashOfConfig":"9"},{"size":942,"mtime":1607435650024,"results":"10","hashOfConfig":"9"},{"size":174,"mtime":1607346651262,"results":"11","hashOfConfig":"9"},{"size":2880,"mtime":1607352347836,"results":"12","hashOfConfig":"9"},{"size":1906,"mtime":1607435314998,"results":"13","hashOfConfig":"9"},{"size":1276,"mtime":1607434557043,"results":"14","hashOfConfig":"9"},{"size":932,"mtime":1607436110797,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qijnl0",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/howardzhang/Documents/freecodecamp/covid/src/index.js",[],"/Users/howardzhang/Documents/freecodecamp/covid/src/App.js",[],"/Users/howardzhang/Documents/freecodecamp/covid/src/components/index.js",[],"/Users/howardzhang/Documents/freecodecamp/covid/src/components/Cards/Cards.jsx",[],"/Users/howardzhang/Documents/freecodecamp/covid/src/components/Charts/Charts.jsx",["31","32"],"import React,{useState, useEffect} from 'react'\nimport {fetchDailyData} from '../../api'\nimport {Line,Bar} from 'react-chartjs-2'\nimport { StylesProvider } from '@material-ui/core';\n\nimport styles from './Chart.module.css'\n\nconst Charts = ({data:{confirmed,recovered,deaths}, country}) =>{\n \n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect( ()=>{\n        const fetchAPI= async ()=>{\n            setDailyData (await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n\n    const lineChart = (\n        dailyData.length!=0?\n        (<Line\n            data={{\n                labels: dailyData.map(({date})=>date),\n                datasets:[{\n                    data:dailyData.map(({confirmed})=>confirmed),\n                    label:'Infected',\n                    borderColor: '#3333ff',\n                    fill:true,\n                },{\n                    data:dailyData.map(({deaths})=>deaths),\n                    label:'Deaths',\n                    backgroundColor: 'rgba(255,0,0,0.5)',\n                    fill:true,\n                }],\n            }}\n        \n        />):null\n\n    );\n\n\n    const barChart =(\n        confirmed?(<Bar \n            data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets:[{label:'People',backgroundColor:[\n                    'rgba(0,0,255,0.5)',\n                    'rgba(0,255,0,0.5)',\n                    'rgba(255,0,0,0.5)',\n                    \n                ],\n                data: [confirmed.value, recovered.value, deaths.value]\n            }]\n            }}\n            options={{\n                legend:{display: false},\n                title:{display:true, text:`Current state in ${country}`},\n            }}\n            \n            />):null\n    );\n\n\n    return (\n      <div className = {styles.container}>\n      {country?barChart:lineChart}\n      </div>\n    )\n}\n\nexport default Charts;\n","/Users/howardzhang/Documents/freecodecamp/covid/src/api/index.js",[],"/Users/howardzhang/Documents/freecodecamp/covid/src/components/CountryPicker/CountryPicker.jsx",[],{"ruleId":"33","severity":1,"message":"34","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":24},{"ruleId":"37","severity":1,"message":"38","line":21,"column":25,"nodeType":"39","messageId":"40","endLine":21,"endColumn":27},"no-unused-vars","'StylesProvider' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]